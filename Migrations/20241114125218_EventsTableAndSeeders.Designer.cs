// <auto-generated />
using System;
using CordiSimpleDotnet.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CordiSimpleDotnet.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241114125218_EventsTableAndSeeders")]
    partial class EventsTableAndSeeders
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("CordiSimpleDotnet.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("description");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("end_date");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("location");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("name");

                    b.Property<int>("OccupiedSlots")
                        .HasColumnType("int")
                        .HasColumnName("occupied_slots");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime(6)")
                        .HasColumnName("start_date");

                    b.Property<bool>("Status")
                        .HasColumnType("tinyint(1)")
                        .HasColumnName("status");

                    b.HasKey("Id");

                    b.ToTable("events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 250,
                            Description = "encuentro literario con escritores y editoriales locales.",
                            EndDate = new DateTime(2024, 10, 29, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "plaza mayor, medellín",
                            Name = "feria del libro",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 10, 25, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 250,
                            Description = "exposición de avances tecnológicos y nuevas innovaciones.",
                            EndDate = new DateTime(2024, 12, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "corferias, bogotá",
                            Name = "expo tecnología",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 12, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 250,
                            Description = "exposición de obras de arte contemporáneo de artistas colombianos.",
                            EndDate = new DateTime(2024, 11, 20, 20, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "museo de arte moderno, cartagena",
                            Name = "exposición de arte moderno",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 11, 20, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 250,
                            Description = "concierto navideño con coros y orquestas locales.",
                            EndDate = new DateTime(2024, 12, 15, 21, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "teatro metropolitano, medellín",
                            Name = "concierto de navidad",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 12, 15, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 250,
                            Description = "proyección de películas y charlas con cineastas colombianos.",
                            EndDate = new DateTime(2024, 11, 2, 22, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "cine colombia, cali",
                            Name = "festival de cine",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 10, 30, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 250,
                            Description = "encuentro de profesionales de la salud con charlas y talleres.",
                            EndDate = new DateTime(2024, 11, 7, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "hotel hilton, cartagena",
                            Name = "congreso de medicina",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 11, 5, 8, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 250,
                            Description = "muestra de la gastronomía colombiana con degustaciones y talleres.",
                            EndDate = new DateTime(2024, 12, 12, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "centro de convenciones, cali",
                            Name = "expo gastronómica",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 12, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = false
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 250,
                            Description = "presentaciones de grupos de danza folclórica de diferentes regiones.",
                            EndDate = new DateTime(2024, 11, 18, 19, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "plaza mayor, medellín",
                            Name = "festival de danza folclórica",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 11, 18, 15, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 250,
                            Description = "competencia de atletismo en diferentes categorías.",
                            EndDate = new DateTime(2024, 12, 20, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Location = "parque simón bolívar, bogotá",
                            Name = "carrera 10k",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 12, 20, 7, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 250,
                            Description = "un festival de música al aire libre con artistas nacionales e internacionales.",
                            EndDate = new DateTime(2024, 11, 10, 23, 59, 0, 0, DateTimeKind.Unspecified),
                            Location = "parque simón bolívar, bogotá",
                            Name = "festival de música",
                            OccupiedSlots = 0,
                            StartDate = new DateTime(2024, 11, 10, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = true
                        });
                });

            modelBuilder.Entity("CordiSimpleDotnet.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("last_name");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("password");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("role");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "caro@example.com",
                            LastName = "bte",
                            Name = "caro",
                            Password = "password",
                            Role = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Email = "cami@example.com",
                            LastName = "campi",
                            Name = "cami",
                            Password = "password",
                            Role = "user"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
